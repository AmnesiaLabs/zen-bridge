<html ng-app="imessage2">
<head>
  <title>iMessage with Express</title>
   <link href="/style.css" rel="stylesheet" type="text/css"/>
   <link href="/favicon.png" rel="icon" type="image/x-icon" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
</head>
<body ng-controller="imMessages" id="links-page">
  <section class="container">
    <div class="recipient">
      <h4>{{contacts[current].id}}</h4>
      <ul>
        <li><a ng-href="/messages/{{current}}">Chat</a></li>
        <li><a ng-href="/attachments/{{current}}">Attachments</a></li>
        <li><a ng-href="/links/{{current}}">Links</a></li>
      </ul>
    </div>

    <input type="text" ng-model="search.text">
    <label>Only links: <input type="checkbox" ng-model="viz.url_only"></label>

    <div class="links">
      <div ng-hide="viz.url_only"
           ng-repeat="message in messages | filter:search"
           class="link"
           ng-class="{'me': message.is_from_me}">
        <div>{{message.text}}</div>
        <div class="author">
          <span ng-show="message.is_from_me">(me)</span>
          <span ng-show="!message.is_from_me">({{contacts[message.handle_id].id}})</span>
        </div>
      </div>

      <div ng-show="viz.url_only"
           ng-repeat="message in messages | filter:search | isLink"
           class="only-links link"
           ng-class="{'from-me': message.is_from_me}">
        <div>
          <a ng-href="{{match(message.text) || 'no'}}" target="blank">{{match(message.text) || 'no'}}</a>
        </div>
        <div class="author">
          <span ng-show="message.is_from_me">(me)</span>
          <span ng-show="!message.is_from_me">({{contacts[message.handle_id].id}})</span>
        </div>
      </div>
    </div>
  </section>

  <script type="text/javascript" src="/bower_components/angular/angular.js"></script>
  <script type="text/javascript">

  var match = function(text) {
    var m = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/.exec(text);
    return m[0];
  };

  var isLink = function(text) {
    var m = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/.exec(text);
    if (m == null) return false;
    return true;
  }

  angular.module('imessage2', [])
    .filter('isLink', function() {
      return function(messages) {
        return messages.filter(function(message) {
          return isLink(message.text)
        })
      };
    })
    .controller('imMessages', function($scope, $http, $location) {
      $scope.messages = []
      $scope.contacts = {};
      $scope.viz = {};
      $scope.viz.url_only = true;
      $scope.current = $location.absUrl().replace(/.*\//,'');

      $http.get('/api/contacts')
        .success(function(contacts) {
          var contactsDict = {}
          contacts.forEach(function(contact) {
            contactsDict[contact.ROWID] = contact;
          })
          $scope.contacts = contactsDict;
        })

      $http.get('/api/links/' + $location.absUrl().replace(/.*\//,''))
        .success(function(messages) {
          $scope.messages = messages.reverse();
        })

      $scope.match = match;
    })
  </script>
</body>
</html>